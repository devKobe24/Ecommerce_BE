services:
  # ✅ User DB (3307 → 내부 3306)
  mysql-user:
    image: mysql:8.3
    container_name: mysql-user
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: user_db
    volumes:
      - mysql-user-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  # ✅ Product DB (3308 → 내부 3306)
  mysql-product:
    image: mysql:8.3
    container_name: mysql-product
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: product_db
    volumes:
      - mysql-product-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  # ✅ Redis
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - ecommerce-network

  # ✅ Eureka Discovery
  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - JAVA_TOOL_OPTIONS=-Djdk.tls.client.protocols=TLSv1.2
    networks:
      - ecommerce-network

  # ✅ Gateway
  gateway-service:
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      discovery-service:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - JAVA_TOOL_OPTIONS=-Djdk.tls.client.protocols=TLSv1.2
    networks:
      - ecommerce-network
    env_file:
      - .env

  # ✅ User Service
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      mysql-user:
        condition: service_healthy
      discovery-service:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - JAVA_TOOL_OPTIONS=-Djdk.tls.client.protocols=TLSv1.2
    networks:
      - ecommerce-network
    env_file:
      - .env

  # ✅ Product Service
  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    container_name: product-service
    ports:
      - "8082:8082"
    depends_on:
      mysql-product:
        condition: service_healthy
      discovery-service:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - JAVA_TOOL_OPTIONS=-Djdk.tls.client.protocols=TLSv1.2
    networks:
      - ecommerce-network

  # ✅ Admin Service
  admin-service:
    build:
      context: .
      dockerfile: admin-service/Dockerfile
    container_name: admin-service
    ports:
      - "8083:8083"
    depends_on:
      user-service:
        condition: service_started
      discovery-service:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - JAVA_TOOL_OPTIONS=-Djdk.tls.client.protocols=TLSv1.2
    networks:
      - ecommerce-network
    env_file:
        - .env

networks:
  ecommerce-network:
    name: ecommerce-network
    driver: bridge
    external: true

volumes:
  mysql-user-data:
  mysql-product-data:


